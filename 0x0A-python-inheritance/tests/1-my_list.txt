Test cases for 1-my_list.py


Import module
>>> MyList = __import__('1-my_list').MyList

Cases to be evaluated:

Case 1: test with empty list
>>> my_list = MyList()
>>> print(my_list)
[]
>>> my_list.print_sorted()
[]
>>> print(my_list)
[]

Case 2: test with string arguments
>>> my_list = MyList()
>>> my_list.append('Happy')
>>> my_list.append('Sock')
>>> my_list.append('Loop')
>>> print(my_list)
['Happy', 'Sock', 'Loop']
>>> my_list.print_sorted()
['Happy', 'Loop', 'Sock']
>>> print(my_list)
['Happy', 'Sock', 'Loop']

Case 3: test with mixed type arguments
>>> my_list = MyList()
>>> my_list.append('Happy')
>>> my_list .append(1)
>>> my_list.append(2.6)
>>> print(my_list)
['Happy', 1, 2.6]
>>> my_list.print_sorted()
Traceback (most recent call last):
...
TypeError: '<' not supported between instances of 'int' and 'str'

Case 4: test with negative and positive integers
>>> my_list = MyList()
>>> my_list.append(5)
>>> my_list.append(2)
>>> my_list.append(-9)
>>> print(my_list)
[5, 2, -9]
>>> my_list.print_sorted()
[-9, 2, 5]
>>> print(my_list)
[5, 2, -9]

Case 5: test with float numbers
>>> my_list = MyList()
>>> my_list.append(2.5)
>>> my_list.append(6.9)
>>> my_list.append(2.1)
>>> print(my_list)
[2.5, 6.9, 2.1]
>>> my_list.print_sorted()
[2.1, 2.5, 6.9]
>>> print(my_list)
[2.5, 6.9, 2.1]

Case 6: test with integers
>>> my_list = MyList()
>>> my_list.append(2)
>>> my_list.append(6)
>>> my_list.append(3)
>>> print(my_list)
[2, 6, 3]
>>> my_list.print_sorted()
[2, 3, 6]
>>> print(my_list)
[2, 6, 3]
